function ReShAPE_GUI()

warning('off','MATLAB:hg:uicontrol:ParameterValuesMustBeValid'); % suppress warnings if the sliders min and max values are both 1

%% Constants and Figure Options
labeled_images_path = pwd;
labeled_images = {};
intensity_images_path = pwd;
intensity_images = {};
save_file_path = pwd;
save_file_name = 'Features.csv';
num_frames = 0;
current_frame = 1;
img = [];
int_img = [];
allStats = table;

if ~isdeployed
    addpath([pwd filesep 'src']);
    addpath([pwd filesep 'imgs']);
    addpath([pwd filesep 'plugins']);
end

% Define General colors
lt_gray = [0.8,0.8,0.8];
charcoal_gray = [0.21,0.27,0.31];
cobalt_blue = [0.0,0.3,0.4];

% Option Checkboxes container
featureOptions = {};

% GUI Settings
GUI_NAME = 'ReShAPE GUI';
RP_OPT = {{'Area',0},...
          {'Centroid',0},...
          {'Eccentricity',0},...
          {'EquivDiameter',0},...
          {'EulerNumber',0},...
          {'Extent',0},...
          {'MajorAxisLength',0},...
          {'MinorAxisLength',0},...
          {'Orientation',0},...
          {'Perimeter',0},...
          {'Solidity',0},...
          {'MinIntensity',1},...
          {'MaxIntensity',1},...
          {'MeanIntensity',1},...
          {'WeightedCentroid',1}};
      
plugins = dir([pwd filesep 'plugins\*.m']);
PLUGINS = {};
for i=1:length(plugins)
    name = plugins(i).name(1:end-2);
    nArgs = nargin(name);
    nArgs = nArgs - sign(nArgs)<0;
    if nArgs>2 || nArgs<1
        continue
    end
    PLUGINS{i} = {name,nArgs-1};
end

COLORMAPS = {'parula',...
             'jet',...
             'hsv',...
             'hot',...
             'cool',...
             'spring',...
             'summer',...
             'autumn',...
             'winter',...
             'gray',...
             'bone',...
             'copper',...
             'pink',...
             'lines',...
             'colorcube',...
             'prism',...
             'flag'};

FONT_SIZE = 0.03;
FONT_SIZE_TITLE = 0.04;
COMPONENT_HEIGHT = 0.05;
FONT_NAME = 'arial';
FONT_UNITS = 'normalized';
BORDER_WIDTH = 1;

%% GUI Setup
% if the GUI is already open, don't open another copy, bring the current copy to the front
open_fig_handle = findobj('type','figure','name',GUI_NAME);
if ~isempty(open_fig_handle)
    figure(open_fig_handle);
    return;
    %     close(open_fig_handle);
end

%   Get user screen size
SC = get(0, 'ScreenSize');
MaxMonitorX = SC(3);
MaxMonitorY = SC(4);

%   Set the figure window size values
main_tabFigScale = 0.5;          % Change this value to adjust the figure size
gui_ratio = 0.6;
gui_width = round(MaxMonitorX*main_tabFigScale);
gui_height = gui_width*gui_ratio;

offset = 0;
if (SC(2) ~= 1)
    offset = abs(SC(2));
end
XPos = (MaxMonitorX-gui_width)/2 - offset;
YPos = (MaxMonitorY-gui_height)/2 + offset;

% Create the main window and tabbed pane
mainWin = figure('units', 'pixels',...
                 'Position',[ XPos, YPos, gui_width, gui_height ],...
                 'Name',GUI_NAME,...
                 'Toolbar','figure',...
                 'NumberTitle','off',...
                 'Color', lt_gray);
             
tabGroup = uitabgroup('Parent',mainWin,...
                      'SelectionChangedFcn',@update_main_img);
fileTab = uitab('Parent', tabGroup,...
                'Title', '<html><font size=+1>Files</font></html>',...
                'BackgroundColor',lt_gray);
featureTab = uitab('Parent', tabGroup,...
                   'Title', '<html><font size=+1>Features</font></html>',...
                   'BackgroundColor',lt_gray);
visTab = uitab('Parent', tabGroup,...
                'Title', '<html><font size=+1>Visualization</font></html>',...
                'BackgroundColor',lt_gray);
dataTab = uitab('Parent', tabGroup,...
                'Title', '<html><font size=+1>Data</font></html>',...
                'BackgroundColor',lt_gray);

%% Files tab
file_img_panel = uipanel(fileTab,...
                         'Title',['Image: <' '>'],...
                         'Position',[.01 .01 .65 .98],...
                         'TitlePosition','lefttop',...
                         'ForegroundColor',charcoal_gray,...
                         'BackgroundColor',lt_gray,...
                         'BorderWidth', BORDER_WIDTH,...
                         'HighlightColor', charcoal_gray,...
                         'FontUnits',FONT_UNITS,...
                         'FontName',FONT_NAME);
file_img_panel.FontSize = FONT_SIZE_TITLE/file_img_panel.Position(4);

file_img_axis = axes('Parent', file_img_panel,...
                          'Units','normalized',...
                          'Position', [.001 .1 .999 .90]);
axis off; axis image;

file_img_slider = uicontrol('style','slider',...
                              'Parent',file_img_panel,...
                              'unit','normalized',...
                              'Min',1,...
                              'Max',num_frames,...
                              'Value',current_frame, ...
                              'position',[.2 0.01 0.6 0.05],...
                              'SliderStep', [1, 1]/max((num_frames - 1),1), ...  % Map SliderStep to whole number, Actual step = SliderStep * (Max slider value - Min slider value)
                              'callback',{@imgSliderCallback});
                     
file_labeled_panel = uipanel(fileTab,...
                             'Title','Labeled Image Path',...
                             'Position',[.67 .74 .32 .25],...
                             'TitlePosition','lefttop',...
                             'ForegroundColor',charcoal_gray,...
                             'BackgroundColor',lt_gray,...
                             'BorderWidth', BORDER_WIDTH,...
                             'HighlightColor', charcoal_gray,...
                             'FontUnits',FONT_UNITS,...
                             'FontName',FONT_NAME);
file_labeled_panel.FontSize = FONT_SIZE_TITLE/file_labeled_panel.Position(4);
                 
file_labeled_path_edit = uicontrol(fileTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .89 .31 COMPONENT_HEIGHT],...
                                   'String',labeled_images_path,...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
file_labeled_path_edit.FontSize = FONT_SIZE/file_labeled_path_edit.Position(4);
                             
file_labeled_browse_button = uicontrol(fileTab,...
                                       'Style','pushbutton',...
                                       'Units','normalized',...
                                       'Position',[.675 .84 .155 COMPONENT_HEIGHT],...
                                       'String','Browse',...
                                       'BackgroundColor',lt_gray,...
                                       'ForegroundColor',charcoal_gray,...
                                       'FontUnits',FONT_UNITS,...
                                       'FontName',FONT_NAME,...
                                       'Callback', @getLabPath);
file_labeled_browse_button.FontSize = FONT_SIZE/file_labeled_browse_button.Position(4);
                                 
file_labeled_load_button = uicontrol(fileTab,...
                                   'Style','pushbutton',...
                                   'Units','normalized',...
                                   'Position',[.83 .84 .155 COMPONENT_HEIGHT],...
                                   'String','Load Images',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'FontSize',FONT_SIZE,...
                                   'Callback', @loadLabFiles);
file_labeled_load_button.FontSize = FONT_SIZE/file_labeled_load_button.Position(4);

file_labeled_name_label = uicontrol(fileTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .78 .31 COMPONENT_HEIGHT],...
                                   'String','Common File Name:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
file_labeled_name_label.FontSize = FONT_SIZE/file_labeled_name_label.Position(4);

file_labeled_name_edit = uicontrol(fileTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .75 .31 COMPONENT_HEIGHT],...
                                   'String','',...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
file_labeled_name_edit.FontSize = FONT_SIZE/file_labeled_name_edit.Position(4);

file_intensity_panel = uipanel(fileTab,...
                             'Position',[.67 .49 .32 .2275],...
                             'TitlePosition','lefttop',...
                             'ForegroundColor',charcoal_gray,...
                             'BackgroundColor',lt_gray,...
                             'BorderWidth', BORDER_WIDTH,...
                             'HighlightColor', charcoal_gray,...
                             'FontUnits',FONT_UNITS,...
                             'FontName',FONT_NAME);
file_intensity_panel.FontSize = FONT_SIZE_TITLE/file_intensity_panel.Position(4);

file_intensity_panel_checkbox = uicontrol(fileTab,...
                                     'Style','checkbox',...
                                     'Units','normalized',...
                                     'Position',[.675 .69 .19 COMPONENT_HEIGHT],...
                                     'String','Intensity Images',...
                                     'BackgroundColor',lt_gray,...
                                     'ForegroundColor',charcoal_gray,...
                                     'FontUnits',FONT_UNITS,...
                                     'FontName',FONT_NAME,...
                                     'FontSize',FONT_SIZE,...
                                     'Callback', @maskInactive);
file_intensity_panel_checkbox.FontSize = FONT_SIZE_TITLE/file_intensity_panel_checkbox.Position(4);
                 
file_intensity_path_edit = uicontrol(fileTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .64 .31 COMPONENT_HEIGHT],...
                                   'String',labeled_images_path,...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
file_intensity_path_edit.FontSize = FONT_SIZE/file_intensity_path_edit.Position(4);
                             
file_intensity_browse_button = uicontrol(fileTab,...
                                       'Style','pushbutton',...
                                       'Units','normalized',...
                                       'Position',[.675 .59 .155 COMPONENT_HEIGHT],...
                                       'String','Browse',...
                                       'BackgroundColor',lt_gray,...
                                       'ForegroundColor',charcoal_gray,...
                                       'FontUnits',FONT_UNITS,...
                                       'FontName',FONT_NAME,...
                                       'Callback', @getIntPath);
file_intensity_browse_button.FontSize = FONT_SIZE/file_intensity_browse_button.Position(4);
                                 
file_intensity_load_button = uicontrol(fileTab,...
                                   'Style','pushbutton',...
                                   'Units','normalized',...
                                   'Position',[.83 .59 .155 COMPONENT_HEIGHT],...
                                   'String','Load Images',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'FontSize',FONT_SIZE,...
                                   'Callback', @loadIntFiles);
file_intensity_load_button.FontSize = FONT_SIZE/file_intensity_load_button.Position(4);

file_intensity_name_label = uicontrol(fileTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .53 .31 COMPONENT_HEIGHT],...
                                   'String','Common File Name:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
file_intensity_name_label.FontSize = FONT_SIZE/file_intensity_name_label.Position(4);

file_intensity_name_edit = uicontrol(fileTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .50 .31 COMPONENT_HEIGHT],...
                                   'String','',...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
file_intensity_name_edit.FontSize = FONT_SIZE/file_intensity_name_edit.Position(4);

file_image_table_label = uicontrol(fileTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .425 .31 COMPONENT_HEIGHT],...
                                   'String','File Alignment:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
file_image_table_label.FontSize = FONT_SIZE/file_image_table_label.Position(4);

file_image_table = uitable(fileTab,...
                           'Units','normalized',...
                           'Data',{'None' 'None'},...
                           'ColumnName',{'<html><font size=+0>Labeled</font></html>' '<html><font size=+0>Intensity</font></html>'},...
                           'ColumnEditable',[false false],...
                           'ColumnFormat',{'char' 'char'},...
                           'FontUnits',FONT_UNITS,...
                           'FontName',FONT_NAME,...
                           'Position',[.67 .01 .32 .43],...
                           'RowName',[],...
                           'ColumnWidth',{.158*mainWin.Position(3)});
file_image_table.FontSize = FONT_SIZE/file_image_table.Position(4);
                
%% Features Panel

feature_img_panel = uipanel(featureTab,...
                            'Title',['Image: <' '>'],...
                            'Position',[.01 .01 .65 .98],...
                            'TitlePosition','lefttop',...
                            'ForegroundColor',charcoal_gray,...
                            'BackgroundColor',lt_gray,...
                            'BorderWidth', BORDER_WIDTH,...
                            'HighlightColor', charcoal_gray,...
                            'FontUnits',FONT_UNITS,...
                            'FontName',FONT_NAME);
feature_img_panel.FontSize = FONT_SIZE_TITLE/feature_img_panel.Position(4);

feature_img_axis = axes('Parent', feature_img_panel,...
                          'Units','normalized',...
                          'Position', [.001 .1 .999 .90]);
axis off; axis image;

feature_img_slider = uicontrol('style','slider',...
                              'Parent',feature_img_panel,...
                              'unit','normalized',...
                              'Min',1,...
                              'Max',num_frames,...
                              'Value',current_frame, ...
                              'position',[.2 0.01 0.6 0.05],...
                              'SliderStep', [1, 1]/max((num_frames - 1),1), ...  % Map SliderStep to whole number, Actual step = SliderStep * (Max slider value - Min slider value)
                              'callback',{@imgSliderCallback});
                
options_panel = uipanel(featureTab,...
                        'Title','Features',...
                        'Position',[.67 .32 .32 .67],...
                        'TitlePosition','lefttop',...
                        'ForegroundColor',charcoal_gray,...
                        'BackgroundColor',lt_gray,...
                        'BorderWidth', BORDER_WIDTH,...
                        'HighlightColor', charcoal_gray,...
                        'FontUnits',FONT_UNITS,...
                        'FontName',FONT_NAME);
options_panel.FontSize = FONT_SIZE_TITLE/options_panel.Position(4);

r = 0;
c = 0;
for option = 1:length(RP_OPT)
    featureOptions{option} = uicontrol(featureTab,...
                                       'Style','checkbox',...
                                       'Units','normalized',...
                                       'Position',[.675+r*.155 .9-c*COMPONENT_HEIGHT .13 COMPONENT_HEIGHT],...
                                       'String',RP_OPT{option}{1},...
                                       'BackgroundColor',lt_gray,...
                                       'ForegroundColor',charcoal_gray,...
                                       'FontUnits',FONT_UNITS,...
                                       'FontName',FONT_NAME);
    featureOptions{option}.FontSize = 0.75*FONT_SIZE/featureOptions{option}.Position(4);
    c = c+r;
    r = ~r;
end

for option = 1:length(PLUGINS)
    featureOptions{option+length(RP_OPT)} = uicontrol(featureTab,...
                                                      'Style','checkbox',...
                                                      'Units','normalized',...
                                                      'Position',[.675+r*.155 .9-c*COMPONENT_HEIGHT .13 COMPONENT_HEIGHT],...
                                                      'String',PLUGINS{option}{1},...
                                                      'BackgroundColor',lt_gray,...
                                                      'ForegroundColor',charcoal_gray,...
                                                      'FontUnits',FONT_UNITS,...
                                                      'FontName',FONT_NAME);
    featureOptions{option+length(RP_OPT)}.FontSize = 0.75*FONT_SIZE/featureOptions{option}.Position(4);
    c = c+r;
    r = ~r;
end
                    
run_button = uicontrol(featureTab,...
                       'Style','pushbutton',...
                       'Units','normalized',...
                       'Position',[.675 .01 .31 COMPONENT_HEIGHT],...
                       'String','RUN & SAVE',...
                       'BackgroundColor',lt_gray,...
                       'ForegroundColor',charcoal_gray,...
                       'FontUnits',FONT_UNITS,...
                       'FontName',FONT_NAME,...
                       'FontSize',FONT_SIZE,...
                       'Callback', @runFeatures);
run_button.FontSize = FONT_SIZE/run_button.Position(4);

features_save_panel = uipanel(featureTab,...
                             'Title','Save Features',...
                             'Position',[.67 .07 .32 .25],...
                             'TitlePosition','lefttop',...
                             'ForegroundColor',charcoal_gray,...
                             'BackgroundColor',lt_gray,...
                             'BorderWidth', BORDER_WIDTH,...
                             'HighlightColor', charcoal_gray,...
                             'FontUnits',FONT_UNITS,...
                             'FontName',FONT_NAME);
features_save_panel.FontSize = FONT_SIZE_TITLE/features_save_panel.Position(4);
                 
features_save_path_edit = uicontrol(featureTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .22 .31 COMPONENT_HEIGHT],...
                                   'String',save_file_path,...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
features_save_path_edit.FontSize = FONT_SIZE/features_save_path_edit.Position(4);
                             
features_save_browse_button = uicontrol(featureTab,...
                                       'Style','pushbutton',...
                                       'Units','normalized',...
                                       'Position',[.675 .17 .155 COMPONENT_HEIGHT],...
                                       'String','Browse',...
                                       'BackgroundColor',lt_gray,...
                                       'ForegroundColor',charcoal_gray,...
                                       'FontUnits',FONT_UNITS,...
                                       'FontName',FONT_NAME,...
                                       'Callback', @getSavePath);
features_save_browse_button.FontSize = FONT_SIZE/features_save_browse_button.Position(4);

features_save_name_label = uicontrol(featureTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .11 .31 COMPONENT_HEIGHT],...
                                   'String','File Name:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
features_save_name_label.FontSize = FONT_SIZE/features_save_name_label.Position(4);

features_save_name_edit = uicontrol(featureTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .08 .31 COMPONENT_HEIGHT],...
                                   'String',save_file_name,...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
features_save_name_edit.FontSize = FONT_SIZE/features_save_name_edit.Position(4);

%% Visualization Panel
vis_img_panel = uipanel(visTab,...
                            'Title',['Image: <' '>'],...
                            'Position',[.01 .01 .65 .98],...
                            'TitlePosition','lefttop',...
                            'ForegroundColor',charcoal_gray,...
                            'BackgroundColor',lt_gray,...
                            'BorderWidth', BORDER_WIDTH,...
                            'HighlightColor', charcoal_gray,...
                            'FontUnits',FONT_UNITS,...
                            'FontName',FONT_NAME);
vis_img_panel.FontSize = FONT_SIZE_TITLE/vis_img_panel.Position(4);

vis_img_axis = axes('Parent', vis_img_panel,...
                          'Units','normalized',...
                          'Position', [.001 .1 .999 .90]);
axis off; axis image;

vis_img_slider = uicontrol('style','slider',...
                              'Parent',vis_img_panel,...
                              'unit','normalized',...
                              'Min',1,...
                              'Max',num_frames,...
                              'Value',current_frame, ...
                              'position',[.2 0.01 0.6 0.05],...
                              'SliderStep', [1, 1]/max((num_frames - 1),1), ...  % Map SliderStep to whole number, Actual step = SliderStep * (Max slider value - Min slider value)
                              'callback',{@imgSliderCallback});
                
vis_options_panel = uipanel(visTab,...
                        'Title','Settings',...
                        'Position',[.67 .32 .32 .67],...
                        'TitlePosition','lefttop',...
                        'ForegroundColor',charcoal_gray,...
                        'BackgroundColor',lt_gray,...
                        'BorderWidth', BORDER_WIDTH,...
                        'HighlightColor', charcoal_gray,...
                        'FontUnits',FONT_UNITS,...
                        'FontName',FONT_NAME);
vis_options_panel.FontSize = FONT_SIZE_TITLE/vis_options_panel.Position(4);
               
vis_feature_label = uicontrol(visTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .89 .31 COMPONENT_HEIGHT],...
                                   'String','Feature:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
vis_feature_label.FontSize = FONT_SIZE/vis_feature_label.Position(4);

vis_feature_popup = uicontrol(visTab,...
                                   'Style','popup',...
                                   'Units','normalized',...
                                   'Position',[.675 .86 .31 COMPONENT_HEIGHT],...
                                   'Value',1,...
                                   'String',{'None'},...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
vis_feature_popup.FontSize = FONT_SIZE/vis_feature_popup.Position(4);

vis_colormap_label = uicontrol(visTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .80 .31 COMPONENT_HEIGHT],...
                                   'String','Colormap:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
vis_colormap_label.FontSize = FONT_SIZE/vis_colormap_label.Position(4);

vis_colormap_popup = uicontrol(visTab,...
                                   'Style','popup',...
                                   'Units','normalized',...
                                   'Position',[.675 .77 .31 COMPONENT_HEIGHT],...
                                   'Value',1,...
                                   'String',COLORMAPS,...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'Callback', @setmap);
vis_colormap_popup.FontSize = FONT_SIZE/vis_colormap_popup.Position(4);

%% Data Panel
data_table_panel = uipanel(dataTab,...
                         'Title','Data',...
                         'Position',[.01 .01 .65 .98],...
                         'TitlePosition','lefttop',...
                         'ForegroundColor',charcoal_gray,...
                         'BackgroundColor',lt_gray,...
                         'BorderWidth', BORDER_WIDTH,...
                         'HighlightColor', charcoal_gray,...
                         'FontUnits',FONT_UNITS,...
                         'FontName',FONT_NAME);
data_table_panel.FontSize = FONT_SIZE_TITLE/data_table_panel.Position(4);

data_table = uitable(data_table_panel,...
                           'Units','normalized',...
                           'ColumnEditable',[false false],...
                           'ColumnFormat',{'char' 'char'},...
                           'FontUnits',FONT_UNITS,...
                           'FontName',FONT_NAME,...
                           'Position',[.01 .01 .98 .98],...
                           'RowName',[],...
                           'ColumnWidth',{.158*mainWin.Position(3)});
data_table.FontSize = FONT_SIZE/data_table.Position(4);

data_append_panel = uipanel(dataTab,...
                         'Title','Append Data',...
                         'Position',[.67 .01 .32 .98],...
                         'TitlePosition','lefttop',...
                         'ForegroundColor',charcoal_gray,...
                         'BackgroundColor',lt_gray,...
                         'BorderWidth', BORDER_WIDTH,...
                         'HighlightColor', charcoal_gray,...
                         'FontUnits',FONT_UNITS,...
                         'FontName',FONT_NAME);
data_append_panel.FontSize = FONT_SIZE_TITLE/data_append_panel.Position(4);

data_column_name_label = uicontrol(dataTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .89 .31 COMPONENT_HEIGHT],...
                                   'String','Column Name:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
data_column_name_label.FontSize = FONT_SIZE/data_column_name_label.Position(4);

data_column_name_edit = uicontrol(dataTab,...
                                   'Style','edit',...
                                   'Units','normalized',...
                                   'Position',[.675 .86 .31 COMPONENT_HEIGHT],...
                                   'String','Feature',...
                                   'BackgroundColor','white',...
                                   'ForegroundColor',charcoal_gray,...
                                   'HorizontalAlignment','left',...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME);
data_column_name_edit.FontSize = FONT_SIZE/data_column_name_edit.Position(4);

data_column_name_button = uicontrol(dataTab,...
                       'Style','pushbutton',...
                       'Units','normalized',...
                       'Position',[.675 .81 .31 COMPONENT_HEIGHT],...
                       'String','Update Column',...
                       'BackgroundColor',lt_gray,...
                       'ForegroundColor',charcoal_gray,...
                       'FontUnits',FONT_UNITS,...
                       'FontName',FONT_NAME,...
                       'FontSize',FONT_SIZE,...
                       'Callback', @updateColumn);
data_column_name_button.FontSize = FONT_SIZE/data_column_name_button.Position(4);

data_append_table_label = uicontrol(dataTab,...
                                   'Style','text',...
                                   'Units','normalized',...
                                   'Position',[.675 .75 .31 COMPONENT_HEIGHT],...
                                   'String','Append Data:',...
                                   'BackgroundColor',lt_gray,...
                                   'ForegroundColor',charcoal_gray,...
                                   'FontUnits',FONT_UNITS,...
                                   'FontName',FONT_NAME,...
                                   'HorizontalAlignment','left',...
                                   'FontWeight','bold');
data_append_table_label.FontSize = FONT_SIZE/data_append_table_label.Position(4);

data_append_table = uitable(dataTab,...
                           'Units','normalized',...
                           'Data',{'' ''},...
                           'ColumnEditable',[false true],...
                           'ColumnFormat',{'char' 'char'},...
                           'ColumnName',{'LabeledImage' 'Feature'},...
                           'FontUnits',FONT_UNITS,...
                           'FontName',FONT_NAME,...
                           'Position',[.675 .13 .31 .64],...
                           'RowName',[],...
                           'ColumnWidth',{.150*mainWin.Position(3)});
data_append_table.FontSize = FONT_SIZE/data_append_table.Position(4);

data_column_append_button = uicontrol(dataTab,...
                       'Style','pushbutton',...
                       'Units','normalized',...
                       'Position',[.675 .07 .31 COMPONENT_HEIGHT],...
                       'String','Append Data',...
                       'BackgroundColor',lt_gray,...
                       'ForegroundColor',charcoal_gray,...
                       'FontUnits',FONT_UNITS,...
                       'FontName',FONT_NAME,...
                       'FontSize',FONT_SIZE,...
                       'Callback', @appendData);
data_column_append_button.FontSize = FONT_SIZE/data_column_append_button.Position(4);

data_save_button = uicontrol(dataTab,...
                       'Style','pushbutton',...
                       'Units','normalized',...
                       'Position',[.675 .02 .31 COMPONENT_HEIGHT],...
                       'String','SAVE',...
                       'BackgroundColor',lt_gray,...
                       'ForegroundColor',charcoal_gray,...
                       'FontUnits',FONT_UNITS,...
                       'FontName',FONT_NAME,...
                       'FontSize',FONT_SIZE,...
                       'Callback', @saveData);
data_save_button.FontSize = FONT_SIZE/data_save_button.Position(4);

maskInactive()
updateFeaturesPopup()
%% GUI Callbacks
file_img_panel.ResizeFcn = @resizeFilePanel;
    function cmap = setmap(varargin)
        cmap = colormap(vis_img_axis,vis_colormap_popup.String{vis_colormap_popup.Value});
    end

    function updateFeaturesPopup(varargin)
        if isempty(labeled_images)
            features = {'None'};
        else
            features = {'Labels'};
            
            if ~isempty(intensity_images)
                features = [features {'Intensity'}];
            end
            
            if ~isempty(allStats)
                features = [features allStats.Properties.VariableNames];
            end
        end
            
        vis_feature_popup.String = features;

    end

    function updateColumn(varargin)
        data_append_table.ColumnName{2} = data_column_name_edit.String;
    end

    function appendData(varargin)
        T = table(data_append_table.Data(:,1),data_append_table.Data(:,2),'VariableNames',{'LabeledImage' data_column_name_edit.String});
        allStats = join(allStats,T);
        data_table.Data = table2cell(allStats);
        data_table.ColumnName = allStats.Properties.VariableNames;
    end

    function saveData(varargin)
        if ~isempty(allStats)
            writetable(allStats,[features_save_path_edit.String filesep features_save_name_edit.String]);
            data_table.Data = table2cell(allStats);
            data_table.ColumnName = allStats.Properties.VariableNames;
        end
    end

    function [I, J] = loadCurrentImage(nb)
        if nargin == 0
            nb = current_frame;
        end
        if numel(imfinfo([labeled_images_path filesep file_image_table.Data{nb,1}])) > 1
            I = imread([labeled_images_path filesep file_image_table.Data{nb,1}], 'Index', nb);
        else
            I = imread([labeled_images_path filesep file_image_table.Data{nb,1}]);
        end
        
        if get(file_intensity_panel_checkbox,'Value')
            if strcmp(file_image_table.Data{nb,2},'None')
                J = [];
                return
            elseif numel(imfinfo([intensity_images_path filesep file_image_table.Data{nb,2}])) > 1
                J = imread([intensity_images_path filesep file_image_table.Data{nb,2}], 'Index', nb);
            else
                J = imread([intensity_images_path filesep file_image_table.Data{nb,2}]);
            end
        else
            J = [];
        end
    end

    function imgSliderCallback(varargin)
        current_frame = varargin{1}.Value;
        if feature_img_slider.Value ~= current_frame
            feature_img_slider.Value = current_frame;
        end
        if file_img_slider.Value ~= current_frame
            file_img_slider.Value = current_frame;
        end
        if vis_img_slider.Value ~= current_frame
            vis_img_slider.Value = current_frame;
        end
        [img, int_img] = loadCurrentImage();

        update_main_img();
    end

    function update_main_img(varargin)
        % Read corresponding images
        if isempty(labeled_images)
            return;
        end
        if ~isempty(strfind(tabGroup.SelectedTab.Title,'Files'))
            axes(file_img_axis);
            delete(get(feature_img_axis, 'Children'));
            set(file_img_panel, 'Title', ['Image: <' labeled_images{current_frame} '>']);
            cmap = colormap([0 0 0;hsv(double(range(img(:))))]);
            imshow(zeros(size(img)),cmap)
        elseif ~isempty(strfind(tabGroup.SelectedTab.Title,'Features'))
            axes(feature_img_axis);
            delete(get(feature_img_axis, 'Children'));
            set(feature_img_panel, 'Title', ['Image: <' labeled_images{current_frame} '>']);
            cmap = colormap([0 0 0;hsv(double(range(img(:))))]);
            imshow(zeros(size(img)),cmap)
        elseif ~isempty(strfind(tabGroup.SelectedTab.Title,'Visualization'))
            axes(vis_img_axis);
            delete(get(vis_img_axis, 'Children'));
            set(vis_img_panel, 'Title', ['Image: <' labeled_images{current_frame} '>']);
            cmap = setmap();
            img = generateVisFigure(img);
            int_img = [];
        else
            return
        end
        %img = double(img);

        hold on
        h = imshow(img,cmap);
        hold off
        
        if ~isempty(int_img)
            alphaVals = (int_img-mean(mean(int_img))+std(int_img(:)))/(max(max(int_img))-mean(mean(int_img))+std(int_img(:)));
            set(h,'AlphaData',alphaVals);
        end
        
    end

    function [featureImage] = generateVisFigure(lblImage)
        edges = boxBorderSearch(lblImage,3);
        
        feature = vis_feature_popup.String{vis_feature_popup.Value};
        
        if strcmp(feature,'LabeledImage') || strcmp(feature
            featureImage = (edges==0).*lblImage;
            return
        elseif strcmp(feature,'None')
            featureImage = lblImage;
            return
        end

        objVal = allStats.(feature);

        [sortedImage,indices] = sort(lblImage(:));
        firstVal = find(diff(sortedImage),1)+1;

        featureVals = zeros(size(sortedImage));
        featureVals(firstVal:end) = objVal(sortedImage(firstVal:end));

        featureImage(indices) = featureVals(:);
        featureImage = reshape(featureImage,size(lblImage)).*(edges==0);
    end

    function maskInactive(varargin)
        if get(file_intensity_panel_checkbox,'Value')
            file_intensity_path_edit.Enable = 'on';
            file_intensity_browse_button.Enable = 'on';
            file_intensity_load_button.Enable = 'on';
            for i = 1:length(RP_OPT)+length(PLUGINS)
                set(featureOptions{i},'Enable','on');
            end
        else
            file_intensity_path_edit.Enable = 'off';
            file_intensity_browse_button.Enable = 'off';
            file_intensity_load_button.Enable = 'off';
            for i = 1:length(RP_OPT)
                if RP_OPT{i}{2}
                    set(featureOptions{i},'Value',0);
                    set(featureOptions{i},'Enable','off');
                end
            end
            for i = 1:length(PLUGINS)
                if PLUGINS{i}{2}
                    set(featureOptions{i+length(RP_OPT)},'Value',0);
                    set(featureOptions{i+length(RP_OPT)},'Enable','off');
                end
            end
        end
    end

    function loadLabFiles(varargin)
        labeled_images_path = get(file_labeled_path_edit,'String');
        files = dir([labeled_images_path filesep '*.tif']);
        file_image_table.Data = {'None' 'None'};
        data_append_table.Data = {'' ''};
        expFilter = file_labeled_name_edit.String;
        fileIndex = 1;
        labeled_images = {};
        for i = 1:length(files)
            if ~isempty(regexp(files(i).name,expFilter)) || strcmp(expFilter,'') || isempty(expFilter)
                labeled_images(fileIndex) = {files(i).name};
                file_image_table.Data(fileIndex,:) = {files(i).name 'None'};
                data_append_table.Data(fileIndex,:) = {files(i).name ''};
                fileIndex = fileIndex + 1;
            end
        end
        num_frames = fileIndex-1;
        current_frame = 1;
        file_img_slider.SliderStep = [1, 1]/max((num_frames - 1),1);
        file_img_slider.Max = num_frames;
        file_img_slider.Value = current_frame;
        vis_img_slider.SliderStep = [1, 1]/max((num_frames - 1),1);
        vis_img_slider.Max = num_frames;
        vis_img_slider.Value = current_frame;
        feature_img_slider.SliderStep = [1, 1]/max((num_frames - 1),1);
        feature_img_slider.Max = num_frames;
        feature_img_slider.Value = current_frame;
        loadIntFiles();
        updateFeaturesPopup();
    end

    function getLabPath(varargin)
        inpPath = uigetdir(labeled_images_path);
        if inpPath~=0
            labeled_images_path = inpPath;
            set(file_labeled_path_edit,'String',labeled_images_path);
        end
    end

    function loadIntFiles(varargin)
        intensity_images_path = get(file_intensity_path_edit,'String');
        files = dir([intensity_images_path filesep '*.tif']);
        if isempty(files)
            [img, int_img] = loadCurrentImage();
            update_main_img();
            return
        end
        expFilter = file_intensity_name_edit.String;
        fileIndex = 1;
        for i = 1:num_frames
            file_image_table.Data(i,2) = {'None'};
            if ~isempty(regexp(files(i).name,expFilter)) || strcmp(expFilter,'')
                intensity_images(fileIndex) = {[intensity_images_path filesep files(i).name]};
                file_image_table.Data(fileIndex,2) = {files(i).name};
                fileIndex = fileIndex + 1;
            end
        end
        [img, int_img] = loadCurrentImage();
        update_main_img();
    end

    function getIntPath(varargin)
        inpPath = uigetdir(intensity_images_path);
        if inpPath~=0
            intensity_images_path = inpPath;
            set(file_intensity_path_edit,'String',intensity_images_path);
        end
    end

    function getSavePath(varargin)
        savePath = uigetdir(save_file_path);
        if savePath~=0
            save_file_path = savePath;
            set(features_save_path_edit,'String',save_file_path);
        end
    end

    function runFeatures(varargin)
        run_button.Enable = 'off';
        
        if isempty(labeled_images_path)
            disp('No Images Found!')
            return
        end
        
        rProperties = {};
        featureIndex = 0;
        for i = 1:length(RP_OPT)
            if get(featureOptions{i},'Value')
                featureIndex = featureIndex + 1;
                rProperties{featureIndex} = get(featureOptions{i},'String');
            end
        end
        
        allStats = table;
        progBar = waitbar(0,'Starting feature extraction');
        progBar.Children.Title.Interpreter = 'none';
        
        for j = 1:length(labeled_images)
            waitbar((j-1)/length(labeled_images),progBar,['Processing image ' num2str(j) ' of ' num2str(length(labeled_images)) ': ' labeled_images{j}]);
            [I, J] = loadCurrentImage(j);
            stats = table;
            if isempty(J) && ~isempty(rProperties)
                stats = regionprops('table',I,rProperties);
            elseif ~isempty(rProperties)
                stats = regionprops('table',I,J,rProperties);
            end
            for i = 1:length(PLUGINS)
                if get(featureOptions{i+length(RP_OPT)},'Value')
                    tempFun = str2func(PLUGINS{i}{1});
                    if isempty(J) || nargin(PLUGINS{i}{1})
                        stats = [stats table(tempFun(I),'VariableNames',{PLUGINS{i}{1}})];
                    else
                        stats = [stats table(tempFun(I,J),'VariableNames',{PLUGINS{i}{1}})];
                    end
                end
            end
            stats = [table([1:height(stats)]','VariableNames',{'Cell'}) stats];
            if ~isempty(J)
                stats = [table(repmat(intensity_images(j),[height(stats) 1]),'VariableNames',{'IntensityImage'}) stats];
            end
            stats = [table(repmat(labeled_images(j),[height(stats) 1]),'VariableNames',{'LabeledImage'}) stats];
            
            for name = stats.Properties.VariableNames
                [rows, cols] = size(stats.(name{1}));
                if cols>1
                    for col = 1:cols
                        stats.([name{1} '_' num2str(col)]) = stats.(name{1})(:,col);
                    end
                    stats.(name{1}) = [];
                end
            end
            
            allStats = [allStats; stats];
        end
        
        waitbar(1,progBar,'Finished feature extraction, saving data...');
        summary(allStats)
        saveData();
        delete(progBar);
        updateFeaturesPopup();
        run_button.Enable = 'on';
    end

    function resizeFilePanel(varargin)
         file_image_table.ColumnWidth = {.158*mainWin.Position(3)};
         textResize = @(x)['<html><font size=+' num2str(round(FONT_SIZE/7*mainWin.Position(4))-1) '>' x '</font></html>'];
         file_image_table.ColumnName = {textResize('Labeled') textResize('Intensity')};
    end
end